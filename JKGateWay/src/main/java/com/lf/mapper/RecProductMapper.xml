<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lf.mapper.RecProductMapper" >
  <resultMap id="BaseResultMap" type="com.lf.entity.RecProduct" >
    <id column="serial_id" property="serialId" jdbcType="VARCHAR" />
    <result column="product_type_no" property="productTypeNo" jdbcType="VARCHAR" />
    <result column="product_type_name" property="productTypeName" jdbcType="VARCHAR" />
    <result column="product_type_img" property="productTypeImg" jdbcType="VARCHAR" />
    <result column="product_no" property="productNo" jdbcType="VARCHAR" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_img" property="productImg" jdbcType="VARCHAR" />
    <result column="req_url" property="reqUrl" jdbcType="VARCHAR" />
    <result column="mark_img" property="markImg" jdbcType="VARCHAR" />
    <result column="use_flag" property="useFlag" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lf.entity.RecProduct" extends="BaseResultMap" >
    <result column="mark_dec" property="markDec" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    serial_id, product_type_no, product_type_name, product_type_img, product_no, product_name, 
    product_img, req_url, mark_img, use_flag
  </sql>
  <sql id="Blob_Column_List" >
    mark_dec
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lf.entity.RecProductMore" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lf.entity.RecProductMore" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rec_product
    where serial_id = #{serialId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from rec_product
    where serial_id = #{serialId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lf.entity.RecProductMore" >
    delete from rec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lf.entity.RecProduct" >
    insert into rec_product (serial_id, product_type_no, product_type_name, 
      product_type_img, product_no, product_name, 
      product_img, req_url, mark_img, 
      use_flag, mark_dec)
    values (#{serialId,jdbcType=VARCHAR}, #{productTypeNo,jdbcType=VARCHAR}, #{productTypeName,jdbcType=VARCHAR}, 
      #{productTypeImg,jdbcType=VARCHAR}, #{productNo,jdbcType=VARCHAR}, #{productName,jdbcType=VARCHAR}, 
      #{productImg,jdbcType=VARCHAR}, #{reqUrl,jdbcType=VARCHAR}, #{markImg,jdbcType=VARCHAR}, 
      #{useFlag,jdbcType=VARCHAR}, #{markDec,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.lf.entity.RecProduct" >
    insert into rec_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="serialId != null" >
        serial_id,
      </if>
      <if test="productTypeNo != null" >
        product_type_no,
      </if>
      <if test="productTypeName != null" >
        product_type_name,
      </if>
      <if test="productTypeImg != null" >
        product_type_img,
      </if>
      <if test="productNo != null" >
        product_no,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productImg != null" >
        product_img,
      </if>
      <if test="reqUrl != null" >
        req_url,
      </if>
      <if test="markImg != null" >
        mark_img,
      </if>
      <if test="useFlag != null" >
        use_flag,
      </if>
      <if test="markDec != null" >
        mark_dec,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="serialId != null" >
        #{serialId,jdbcType=VARCHAR},
      </if>
      <if test="productTypeNo != null" >
        #{productTypeNo,jdbcType=VARCHAR},
      </if>
      <if test="productTypeName != null" >
        #{productTypeName,jdbcType=VARCHAR},
      </if>
      <if test="productTypeImg != null" >
        #{productTypeImg,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null" >
        #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImg != null" >
        #{productImg,jdbcType=VARCHAR},
      </if>
      <if test="reqUrl != null" >
        #{reqUrl,jdbcType=VARCHAR},
      </if>
      <if test="markImg != null" >
        #{markImg,jdbcType=VARCHAR},
      </if>
      <if test="useFlag != null" >
        #{useFlag,jdbcType=VARCHAR},
      </if>
      <if test="markDec != null" >
        #{markDec,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lf.entity.RecProductMore" resultType="java.lang.Integer" >
    select count(*) from rec_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rec_product
    <set >
      <if test="record.serialId != null" >
        serial_id = #{record.serialId,jdbcType=VARCHAR},
      </if>
      <if test="record.productTypeNo != null" >
        product_type_no = #{record.productTypeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productTypeName != null" >
        product_type_name = #{record.productTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.productTypeImg != null" >
        product_type_img = #{record.productTypeImg,jdbcType=VARCHAR},
      </if>
      <if test="record.productNo != null" >
        product_no = #{record.productNo,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productImg != null" >
        product_img = #{record.productImg,jdbcType=VARCHAR},
      </if>
      <if test="record.reqUrl != null" >
        req_url = #{record.reqUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.markImg != null" >
        mark_img = #{record.markImg,jdbcType=VARCHAR},
      </if>
      <if test="record.useFlag != null" >
        use_flag = #{record.useFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.markDec != null" >
        mark_dec = #{record.markDec,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update rec_product
    set serial_id = #{record.serialId,jdbcType=VARCHAR},
      product_type_no = #{record.productTypeNo,jdbcType=VARCHAR},
      product_type_name = #{record.productTypeName,jdbcType=VARCHAR},
      product_type_img = #{record.productTypeImg,jdbcType=VARCHAR},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_img = #{record.productImg,jdbcType=VARCHAR},
      req_url = #{record.reqUrl,jdbcType=VARCHAR},
      mark_img = #{record.markImg,jdbcType=VARCHAR},
      use_flag = #{record.useFlag,jdbcType=VARCHAR},
      mark_dec = #{record.markDec,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rec_product
    set serial_id = #{record.serialId,jdbcType=VARCHAR},
      product_type_no = #{record.productTypeNo,jdbcType=VARCHAR},
      product_type_name = #{record.productTypeName,jdbcType=VARCHAR},
      product_type_img = #{record.productTypeImg,jdbcType=VARCHAR},
      product_no = #{record.productNo,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_img = #{record.productImg,jdbcType=VARCHAR},
      req_url = #{record.reqUrl,jdbcType=VARCHAR},
      mark_img = #{record.markImg,jdbcType=VARCHAR},
      use_flag = #{record.useFlag,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lf.entity.RecProduct" >
    update rec_product
    <set >
      <if test="productTypeNo != null" >
        product_type_no = #{productTypeNo,jdbcType=VARCHAR},
      </if>
      <if test="productTypeName != null" >
        product_type_name = #{productTypeName,jdbcType=VARCHAR},
      </if>
      <if test="productTypeImg != null" >
        product_type_img = #{productTypeImg,jdbcType=VARCHAR},
      </if>
      <if test="productNo != null" >
        product_no = #{productNo,jdbcType=VARCHAR},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productImg != null" >
        product_img = #{productImg,jdbcType=VARCHAR},
      </if>
      <if test="reqUrl != null" >
        req_url = #{reqUrl,jdbcType=VARCHAR},
      </if>
      <if test="markImg != null" >
        mark_img = #{markImg,jdbcType=VARCHAR},
      </if>
      <if test="useFlag != null" >
        use_flag = #{useFlag,jdbcType=VARCHAR},
      </if>
      <if test="markDec != null" >
        mark_dec = #{markDec,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where serial_id = #{serialId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lf.entity.RecProduct" >
    update rec_product
    set product_type_no = #{productTypeNo,jdbcType=VARCHAR},
      product_type_name = #{productTypeName,jdbcType=VARCHAR},
      product_type_img = #{productTypeImg,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_img = #{productImg,jdbcType=VARCHAR},
      req_url = #{reqUrl,jdbcType=VARCHAR},
      mark_img = #{markImg,jdbcType=VARCHAR},
      use_flag = #{useFlag,jdbcType=VARCHAR},
      mark_dec = #{markDec,jdbcType=LONGVARCHAR}
    where serial_id = #{serialId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lf.entity.RecProduct" >
    update rec_product
    set product_type_no = #{productTypeNo,jdbcType=VARCHAR},
      product_type_name = #{productTypeName,jdbcType=VARCHAR},
      product_type_img = #{productTypeImg,jdbcType=VARCHAR},
      product_no = #{productNo,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_img = #{productImg,jdbcType=VARCHAR},
      req_url = #{reqUrl,jdbcType=VARCHAR},
      mark_img = #{markImg,jdbcType=VARCHAR},
      use_flag = #{useFlag,jdbcType=VARCHAR}
    where serial_id = #{serialId,jdbcType=VARCHAR}
  </update>
</mapper>